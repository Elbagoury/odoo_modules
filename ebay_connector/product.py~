from openerp.osv import fields, osv

class product_ebay(osv.osv):
	_inherit = "product.template"
	
	_columns = {
		'copies': fields.char(),
		'oem_code': fields.char(),
		'with_chip': fields.boolean(),
		'ebay_sync': fields.boolean(),
		'ebay_id': fields.char(),
		'ebay_date_added': fields.datetime(),
		'ebay_price': fields.float(),
		'ebay_template_id': fields.many2one('ebay.template'),
		'ebay_item_location': fields.char(),
		'ebay_payment_instruction': fields.text(),
		'ebay_shipping_cost': fields.float(),
		'ebay_additional_item_cost': fields.float(),
		'ebay_free_shipping': fields.boolean(),
		'ebay_extra_name': fields.char(),
		'ebay_extra_value': fields.char(),
		'main_name_part': fields.char(),
		'name_parts': fields.one2many('ebay.name.parts', 'np_id'),
		'stock_limit': fields.integer(default=5),
		'ebay_listing_duration': fields.selection((('Days_7', '7 days'), ('Days_30', '30 days'), ('GTC', 'Good `Till Canceled')))

	}
	
	def set_price(self, cr, uid, ids, context=None):
	
		for record in self.browse(cr, uid, ids, context=context):
			ebay_price = record.list_price - 0.1
			record.ebay_price = ebay_price
		
		return True
	
	def divide_name(self, cr, uid, ids, context=None):
		current_record = None
		for record in self.browse(cr, uid, ids, context=context):
			current_record = record

		desc = current_record.description

		if len(desc) <= 80:
			return True
		

		split = desc.split('FOR ')
		main = split[0] + 'FOR '
		rest = ''

		for x in range (1, len(split)):
			rest += split[x]

		others = rest.split(',')

		parts = []
		line = ''

		current_record.main_name_part = main


		for y in range (0, len(others)):
			if (len(line) + len(others[y])) < (80 - len(main)):
				if(len(line) > 0):
					line += ", "
				line += others[y]
				if y == len(others)-1:
					parts.append(line);
			else:
				parts.append(line)
				line = ''

		for p in parts:
			if(p[0] == ' '):
				p = p.replace(p[0], '')
			

			pro_id = current_record.id
			self.pool.get('ebay.name.parts').create(cr, uid, {'np_id': pro_id, 'name': p})


		return True
	
	
	
	
	
	